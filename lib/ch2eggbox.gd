#!
#! @Chapter Egg-Box Diagrams
#! @ChapterLabel eggbox
#!
#! @Section Preliminaries: Green's Relations
#!
#! Let <Math>S</Math> be a semigroup and
#! let <Math>S^1</Math> be the monoid corresponding to <Math>S</Math>,
#! which is the same as <Math>S</Math> plus an identity element if and
#! only if <Math>S</Math> doesn't already have one.
#! Write <Math>S^1a</Math> for the principal left ideal generated by any
#! element <Math>a\in S</Math>, which is the set
#! <Math>\left\{ sa \mid s\in S^1 \right\}</Math>.
#! Similarly, we let <Math>aS^1</Math> mean
#! <Math>\left\{ as \mid s\in S^1 \right\}</Math>, a principal right ideal,
#! and <Math>S^1aS^1</Math> mean
#! <Math>\left\{ sas' \mid s,s'\in S^1 \right\}</Math>,
#! a principal two-sided ideal.
#!
#! We are now in a position to define Green's relations, which are what
#! define how an "egg-box diagram" is structured.  Each of the five
#! relations defined below, <Math>L,R,J,D,H</Math>, is a binary
#! equivalence relation on <Math>S</Math> (although the definitions
#! use the ideals given above, which leverage <Math>S^1</Math>).
#! We do not prove here that these are equivalence relations;
#! consider this just the preliminaries needed to define the
#! visualization.
#!
#! <List>
#!   <Item>Let <Math>aLb</Math> hold iff <Math>aS^1=bS^1</Math>.</Item>
#!   <Item>Let <Math>aRb</Math> hold iff <Math>S^1a=S^1b</Math>.</Item>
#! </List>
#!
#! Because these are equivalence relations, if we have some
#! <Math>a\in S</Math>, we may refer to its equivalence class under
#! <Math>L</Math> or <Math>R</Math> by <Math>[a]_L</Math> or
#! <Math>[a]_R</Math>, respectively.
#!
#! <List>
#!   <Item>Let <Math>aJb</Math> hold iff <Math>S^1aS^1=S^1bS^1</Math>.</Item>
#!   <Item>Let <Math>aHb</Math> hold iff <Math>aLb</Math> and <Math>aRb</Math>.</Item>
#!   <Item>Let <Math>aDb</Math> hold iff <Math>[a]_R\cap[b]_L\neq\emptyset</Math>.</Item>
#! </List>
#!
#! The coarsest of these five relations is <Math>D</Math> and for any given
#! <Math>a,b\in S</Math>, if any of <Math>aLb,aRb,aJb,aHb</Math> holds then
#! <Math>aDb</Math> holds.
#!
#! Within any given <Math>D</Math>-class, the relations <Math>L</Math>
#! and <Math>R</Math> function on different "axes" so to speak.  All
#! <Math>[a]_L</Math> within a given <Math>D</Math>-class are the same size;
#! the same holds for all <Math>[a]_R</Math> in each <Math>D</Math>-class.
#! And because <Math>H</Math> is defined as the conjunction of <Math>L</Math>
#! and <Math>R</Math>, the parts of its partition are just the intersections
#! of <Math>[a]_L</Math> and <Math>[a]_R</Math> classes.  This happens
#! uniformly within each <Math>D</Math>-class, so all <Math>H</Math>-classes
#! in a <Math>D</Math>-class have the same size.
#!
#! This suggests dividing up the semigroup into <Math>D</Math>-classes,
#! then dividing each <Math>D</Math>-class into <Math>H</Math>-classes,
#! organized into a table of rows and columns with the rows corresponding
#! to <Math>R</Math>-classes and the columns to <Math>L</Math>-classes.
#! Each <Math>D</Math>-class is a grid of little bins
#! (the <Math>H</Math>-classes), which gives rise to the notion of an
#! "egg box" (or "egg carton"), since they, too, are grids of little bins.
#!
#! <Alt Only="LaTeX">
#!     \begin{center}
#!         \includegraphics[height=1.6in]{real-egg-box.png}
#!
#!         Image in the public domain
#!     \end{center}
#! </Alt>
#! <Alt Only="HTML"><![CDATA[<center><img height="200" src="real-egg-box.png"/><br>Image in the public domain</center>]]></Alt>
#! <Alt Not="LaTeX HTML">Image of an egg box/carton not available in this medium.</Alt>
#!
#! @Section Generating egg-box diagrams
#! @SectionLabel makeeggbox
#!
#! As an example, consider the semigroup of non-invertible transformations
#! generated by the six idempotents of degree 3 and rank 2,
#! which you can compute with the following &GAP; code.
#!
#! @Example
#! LoadPackage( "semigroups" );
#! S := SingularTransformationSemigroup( 3 );
#! @EndExample
#!
#! Then its egg-box diagram looks like the following.
#!
#! <Alt Only="LaTeX">
#!     \begin{center}
#!         \includegraphics[height=1.6in]{example-diagram.png}
#!     \end{center}
#! </Alt>
#! <Alt Only="HTML"><![CDATA[<center><img height="300" src="example-diagram.png"/></center>]]></Alt>
#! <Alt Not="LaTeX HTML">Image of an egg-box diagram not available in this medium.</Alt>
#!
#! The diagram is clearly composed of two distinct components,
#! each of which is a grid of cells, and thus each is like an "egg box."
#!
#! This image was generated using this package.
#! If you have already executed the code above to define the
#! semigroup <Code>S</Code>, you could generate an image of
#! the same semigroup with the following code.
#!
#! @Example
#! LoadPackage( "semigroupviz" );
#! ShowSemigroup( S );
#! @EndExample
#!
#! (Technically, that code will generate a much more verbose figure.
#! See the Section <Ref Sect="Section_eltnames"/> for details.)
#!
#! Note the following structure within that image.
#! <List>
#!   <Item>Each large block is a <Math>D</Math>-class.</Item>
#!   <Item>Each row within a <Math>D</Math>-class is an <Math>R</Math>-class.</Item>
#!   <Item>Each column within a <Math>D</Math>-class is an <Math>L</Math>-class.</Item>
#!   <Item>Each cell within a <Math>D</Math>-class is an <Math>H</Math>-class.</Item>
#!   <Item>Each line within an <Math>H</Math>-class cell
#!     is an element of that <Math>H</Math>-class.
#!     In this particular case, each element is represented as a list of
#!     positive integers.  For example, the first element of the first
#!     <Math>H</Math>-class is <Code>[ 1, 2, 2 ]</Code>.</Item>
#! </List>
#!
#! The figure below summarizes these facts visually.
#!
#! <Alt Only="LaTeX">
#!     \begin{center}
#!         \includegraphics[height=1.6in]{label-example-diagram.png}
#!     \end{center}
#! </Alt>
#! <Alt Only="HTML"><![CDATA[<center><img height="300" src="label-example-diagram.png"/></center>]]></Alt>
#! <Alt Not="LaTeX HTML">Image of an egg-box diagram with classes labeled not available in this medium.</Alt>
#!
#! @Section Formatting element names
#! @SectionLabel eltnames
#!
#! If the elements of your semigroup have a compact representation,
#! then the <Ref Func="ShowSemigroup"/> function introduced in Section
#! <Ref Sect="Section_makeeggbox"/> will produce readable diagrams.
#! But if the elements of the semigroup have very long names, then each
#! <Math>H</Math>-class will be very wide, making the diagram less
#! compact and readable.
#!
#! To solve this problem, you can provide a function that maps elements
#! of your semigroup to whatever (typically more compact) notation you'd
#! like to use in the diagram.  You pass this as one of the options to
#! <Ref Func="ShowSemigroup"/>, under the name <Code>ToString</Code>.
#!
#! For instance, the elements of the semigroup
#! shown in Section <Ref Sect="Section_makeeggbox"/> are
#! <Code>Transformation</Code>s, which can be shown compactly by converting
#! them to a list and then from there to a string.  The image in that
#! section was made with the following code.
#!
#! @Example
#! ShowSemigroup(
#!   SingularTransformationSemigroup( 3 ),
#!   rec( ToString := elt -> String( ListTransformation( elt ) ) )
#! );
#! @EndExample
#!
#! Detailed documentation of all the options of the
#! <Ref Func="ShowSemigroup"/> function can be found in its documentation
#! in Section <Ref Chap="Chapter_funcref"/>.
#!
#! @Section Interacting with Egg Box Diagrams
#! @SectionLabel interact
#!
#! Semigroups can be of arbitrary size, and if they become too large,
#! then diagrams become infeasible or unhelpful to view.  Thus this package
#! provides some ways to compute only a portion of a diagram
#! or to hide sections of a diagram as needed.  This section of the manual
#! covers these features.
#!
#! @Subsection Generating only a portion of a diagram
#! @SubsectionLabel portion
#!
#! In the documentation for <Ref Func="ShowSemigroup"/>, you can see that
#! the options object permits you to provide options entitled
#! <Code>NrDClassesIncluded</Code>, <Code>NrRClassesIncludedPerDClass</Code>,
#! <Code>NrLClassesIncludedPerRClass</Code>, and
#! <Code>NrElementsIncludedPerHClass</Code>.  These options govern how much
#! data should be computed by &GAP; and included in the HTML that shows the
#! egg-box diagram.
#!
#! The purpose of these features should be clear by considering a semigroup
#! containing more than one billion elements.  (Such semigroups are easy to
#! create with a single function call in &GAP;.)  Each element takes several
#! bytes to represent, and thus the HTML generated to display such a
#! semigroup would be many gigabytes of data.  And yet humans cannot visually
#! process every one of the billion elements, so we just want to see the
#! overall structure of the semigroup.  Thus it is not necessary for &GAP;
#! to create HTML containing every detail of every <Math>H</Math>-class and
#! all its elements.  It would be sufficient to include several example
#! <Math>D</Math>-classes, each with several example rows and columns, and
#! each resulting <Math>H</Math>-class showing several example elements.
#!
#! You can govern just how many <Math>D</Math>-, <Math>L</Math>-, and
#! <Math>R</Math>-classes are included in the generated diagram, as well as
#! how many elements are included in each <Math>H</Math>-class, using the
#! options mentioned above.  The diagram will make it clear, when you are
#! viewing it, that there are additional elements not available for viewing,
#! because &GAP; did not provide them to the web page to display.
#!
#! Even after executing the code to generate a diagram, the viewer has
#! control over how many of each type of class is displayed.
#! The top right hand corner of the diagram contains a settings icon
#! and clicking it reveals a set of controls like those shown below.
#! (Clicking it again hides them.)
#!
#! <Alt Only="LaTeX">
#!     \begin{center}
#!         \includegraphics[height=2.5in]{egg-box-settings.png}
#!     \end{center}
#! </Alt>
#! <Alt Only="HTML"><![CDATA[<center><img height="450" src="egg-box-settings.png"/></center>]]></Alt>
#! <Alt Not="LaTeX HTML">Image of a diagram's settings controls not available in this medium.</Alt>
#!
#! On the left, you can see a slider that controls how many
#! <Math>D</Math>-classes are shown, as described in Section
#! <Ref Subsect="Subsection_sliders"/>.  Its minimum is one and maximum is
#! the number of <Math>D</Math>-classes &GAP; provided when generating the
#! diagram.  In this case, that maximum is four, which is also the actual
#! number of <Math>D</Math>-classes in the semigroup.  (If it were not,
#! the diagram would include an obvious warning about the missing data;
#! see below.)
#!
#! You can also see options for when to show the headings in an
#! <Math>H</Math>-class, as documented in Section
#! <Ref Subsect="Subsection_sliders"/>.
#!
#! On the right, you can see a box that lets you customize the settings
#! for each <Math>D</Math>-class separately.  Choosing a <Math>D</Math>-class
#! from the drop-down list at the top of that section updates all the
#! controls below to reflect the settings you last specified for that class.
#!
#! The sliders function as described in Section
#! <Ref Subsect="Subsection_sliders"/>.
#! The minimum for each is always one but the maximum is determined by the
#! data included in the diagram by &GAP;.  This may be the actual number of
#! <Math>L</Math>- or <Math>R</Math>-classes in the semigroup, or the actual
#! number of elements in an <Math>H</Math>-class, or it may be less than that
#! number if &GAP; provided only a subset of the semigroup when generating
#! the diagram's data.
#!
#! In that latter case, the interface makes it obvious, as you can see with
#! the bright blue box at the bottom right of the above image.  It warns the
#! user that the <Math>H</Math>-class slider has a maximum of 20 because
#! the &GAP; code that generated this diagram included only 20 elements per
#! <Math>H</Math>-class, even though there are actually 24 elements per
#! <Math>H</Math>-class in this particular <Math>D</Math>-class in the
#! semigroup itself.
#!
#! No such bright blue boxes appear under the sliders for the <Math>R</Math>-
#! or <Math>L</Math>-classes, meaning that in this particular
#! <Math>D</Math>-class, every <Math>R</Math>- and <Math>L</Math>-class
#! in the semigroup has been provided by &GAP; to the diagram for viewing.
#!
#! If you want to make such warnings go away, so that all (or at least more)
#! elements are included in the diagram, you must regenerate the diagram
#! with another call to <Ref Func="ShowSemigroup"/>, this time providing
#! larger values for the relevant option(s),
#! <Code>NrDClassesIncluded</Code>, <Code>NrRClassesIncludedPerDClass</Code>,
#! <Code>NrLClassesIncludedPerRClass</Code>, and/or
#! <Code>NrElementsIncludedPerHClass</Code>.
#!
#! @Subsection Expanding and contracting diagrams
#! @SubsectionLabel sliders
#!
#! While viewing an egg-box diagram, the following interactive options are
#! available to you.
#!
#! If you show the settings controls documented in Section
#! <Ref Subsect="Subsection_portion"/>, then you can interact with those
#! controls as follows.
#!
#! <List>
#!   <Item>The slider entitled "Show this many <Math>D</Math>-classes:"
#!     can be dragged to show or hide <Math>D</Math>-classes.  The
#!     diagram updates as you drag the slider.  If you move this slider
#!     below its maximum, then a note is included at the bottom right
#!     of the diagram, indicating that there are other
#!     <Math>D</Math>-classes not shown.
#!
#!     Regardless of whether the settings controls are shown or hidden,
#!     you can click such a message to expose all available hidden
#!     <Math>D</Math>-classes.  To reverse such an action, use the
#!     slider.</Item>
#! </List>
#! <Alt Only="LaTeX">
#!     \begin{center}
#!         \includegraphics[height=1.2in]{more-D-classes.png}
#!     \end{center}
#! </Alt>
#! <Alt Only="HTML"><![CDATA[<center><img height="225" src="more-D-classes.png"/></center>]]></Alt>
#! <Alt Not="LaTeX HTML">Image of the "more D-classes" message not available in this medium.</Alt>
#! <List>
#!   <Item>The radio buttons allow you to choose when to include
#!     a heading in <Math>H</Math>-classes:
#!     <List>
#!       <Item>Always: Every <Math>H</Math>-class in the diagram will
#!         begin with a heading stating its size, such as
#!         "15 elements:".</Item>
#!       <Item>Never: No <Math>H</Math>-class in the diagram will
#!         begin with a heading; only the elements are shown.</Item>
#!       <Item>When needed: Each <Math>H</Math>-class in the diagram
#!         is treated separately.  A heading stating the number of
#!         elements is omitted if and only if all elements are
#!         shown.  That is, the diagram reports the number of
#!         elements only if it cannot be deduced visually from the
#!         cell.</Item>
#!     </List>
#!   </Item>
#!   <Item>The drop-down list entitled "Choose a <Math>D</Math>-class
#!     by representative:" is present because the right-hand section
#!     of the diagram settings are not global, but local within each
#!     <Math>D</Math>-class.  First choose the <Math>D</Math>-class
#!     whose settings you will edit, then proceed to adjust those
#!     settings with the controls beneath the drop-down list.
#!     Choosing a new <Math>D</Math>-class updates the controls to
#!     reflect the settings you've already set for that class.</Item>
#!   <Item>The slider for the number of <Math>R</Math>-classes to
#!     show determines the number of rows that will be shown in the
#!     chosen <Math>D</Math>-class.
#!     If you do not choose to show all <Math>R</Math>-classes
#!     in the <Math>D</Math>-class, then the <Math>D</Math>-class
#!     will end with an ellipsis and a message indicating that there
#!     are some <Math>R</Math>-classes not shown.
#!
#!     Regardless of whether the settings controls are shown or hidden,
#!     you can click such a message to expose all available hidden
#!     <Math>R</Math>-classes within a <Math>D</Math>-class.
#!     To reverse such an action, use the slider.</Item>
#! </List>
#! <Alt Only="LaTeX">
#!     \begin{center}
#!         \includegraphics[height=1.6in]{more-R-classes.png}
#!     \end{center}
#! </Alt>
#! <Alt Only="HTML"><![CDATA[<center><img height="300" src="more-R-classes.png"/></center>]]></Alt>
#! <Alt Not="LaTeX HTML">Image of the "more R-classes" message not available in this medium.</Alt>
#! <List>
#!   <Item>The slider for the number of <Math>L</Math>-classes to
#!     show determines the number of columns that will be shown in the
#!     chosen <Math>D</Math>-class.
#!     If you do not choose to show all <Math>L</Math>-classes
#!     in the <Math>D</Math>-class, then each row will end with an
#!     ellipsis and a message indicating that there are some
#!     <Math>L</Math>-classes not shown.
#!
#!     Regardless of whether the settings controls are shown or hidden,
#!     you can click such a message to expose all available hidden
#!     <Math>L</Math>-classes within a <Math>D</Math>-class.
#!     To reverse such an action, use the slider.</Item>
#! </List>
#! <Alt Only="LaTeX">
#!     \begin{center}
#!         \includegraphics[height=1.6in]{more-L-classes.png}
#!     \end{center}
#! </Alt>
#! <Alt Only="HTML"><![CDATA[<center><img height="300" src="more-L-classes.png"/></center>]]></Alt>
#! <Alt Not="LaTeX HTML">Image of the "more L-classes" message not available in this medium.</Alt>
#! <List>
#!   <Item>The slider for the number of elements to show determines the
#!     number of lines that will be shown in each cell
#!     (<Math>H</Math>-class) of the chosen <Math>D</Math>-class.
#!     If you do not choose to show all
#!     elements in each <Math>H</Math>-class, then each cell will end
#!     with an ellipsis indicating that there are some elements not
#!     shown.
#!
#!     Regardless of whether the settings controls are shown or hidden,
#!     you can click such a message to expose all available hidden
#!     elements within an <Math>H</Math>-class.
#!     To reverse such an action, use the slider.</Item>
#! </List>
#! <Alt Only="LaTeX">
#!     \begin{center}
#!         \includegraphics[height=1.25in]{more-H-elements.png}
#!     \end{center}
#! </Alt>
#! <Alt Only="HTML"><![CDATA[<center><img height="225" src="more-H-elements.png"/></center>]]></Alt>
#! <Alt Not="LaTeX HTML">Image of the "more elements" ellipsis not available in this medium.</Alt>
#!
#! There are other ways to interact with the diagram using your mouse,
#! independent of the settings controls.  These features function
#! whether the settings controls are open or closed.
#!
#! <List>
#!   <Item>Hovering your mouse over any cell in the diagram will list
#!     all the elements included in that <Math>H</Math>-class, even
#!     if not all are currently being shown in the cell.  This way
#!     you can keep the diagram of a manageable size for high-level
#!     viewing, but drill down by hovering on any given cell.</Item>
#!   <Item>Clicking on the elements shown in any cell in the diagram
#!     will expand just that cell to include all known elements in
#!     that <Math>H</Math>-class.  Clicking again will collapse it
#!     to show just the number you've chosen in the settings, as
#!     indicated above.</Item>
#! </List>
#!
